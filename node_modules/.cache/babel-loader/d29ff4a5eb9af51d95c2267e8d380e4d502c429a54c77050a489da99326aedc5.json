{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\richa\\\\Documents\\\\reactapp\\\\word-guessing-game\\\\src\\\\WordGuessingGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { wordClueDict } from './wordClueDictionary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordGuessingGame = () => {\n  _s();\n  const [targetWord, setTargetWord] = useState('');\n  const [clueWord, setClueWord] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [score, setScore] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(15);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [revealedLetters, setRevealedLetters] = useState(0);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (gameStarted && timeLeft > 0) {\n      const timer = setTimeout(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0) {\n      revealNextLetter();\n    }\n  }, [timeLeft, gameStarted]);\n  useEffect(() => {\n    if (gameStarted && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [gameStarted]);\n  const revealNextLetter = () => {\n    if (revealedLetters < targetWord.length) {\n      setUserInput(prevInput => {\n        const newInput = targetWord.slice(0, revealedLetters + 1).padEnd(targetWord.length, '_');\n        return newInput;\n      });\n      setRevealedLetters(prevRevealed => prevRevealed + 1);\n      setTimeLeft(15);\n    } else {\n      endRound();\n    }\n  };\n  const startGame = () => {\n    setGameStarted(true);\n    newRound();\n  };\n  const newRound = () => {\n    const randomPair = wordClueDict[Math.floor(Math.random() * wordClueDict.length)];\n    setTargetWord(randomPair.target);\n    setClueWord(randomPair.clue);\n    setUserInput('_'.repeat(randomPair.target.length));\n    setRevealedLetters(0);\n    setTimeLeft(15);\n  };\n  const endRound = () => {\n    setGameStarted(false);\n    setTotalScore(totalScore + score);\n    setScore(0);\n  };\n  const handleInputChange = e => {\n    const input = e.target.value.toUpperCase();\n    const newInput = input.split('').filter(char => char !== '_').join('');\n    if (newInput === targetWord) {\n      setScore(score + timeLeft);\n      newRound();\n    } else if (newInput.length === targetWord.length) {\n      // Wrong guess: reset to revealed letters only\n      setUserInput(prevInput => {\n        return targetWord.slice(0, revealedLetters).padEnd(targetWord.length, '_');\n      });\n    } else {\n      // Partial input: allow typing\n      setUserInput(prevInput => {\n        let result = newInput.padEnd(targetWord.length, '_');\n        // Preserve revealed letters\n        for (let i = 0; i < revealedLetters; i++) {\n          result = result.slice(0, i) + targetWord[i] + result.slice(i + 1);\n        }\n        return result;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-black text-white p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-8 text-lime-400\",\n      children: \"What's The Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-4 text-cyan-300 text-2xl\",\n      children: [\"Clue: \", clueWord]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\",\n      value: userInput,\n      onChange: handleInputChange,\n      disabled: !gameStarted,\n      className: \"mb-4 p-2 text-black w-64 text-center text-2xl tracking-widest\",\n      style: {\n        fontFamily: 'monospace'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: gameStarted ? endRound : startGame,\n      className: \"mb-4 px-4 py-2 bg-white text-black\",\n      children: gameStarted ? 'End' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-2\",\n      children: [\"Time: \", timeLeft]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-2 text-lime-400\",\n      children: [\"Score: \", score.toString().padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-blue-400\",\n      children: [\"Total: \", totalScore.toString().padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(WordGuessingGame, \"JrKDvmOmH0NQtSurAewHNHqHTLA=\");\n_c = WordGuessingGame;\nexport default WordGuessingGame;\nvar _c;\n$RefreshReg$(_c, \"WordGuessingGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","wordClueDict","jsxDEV","_jsxDEV","WordGuessingGame","_s","targetWord","setTargetWord","clueWord","setClueWord","userInput","setUserInput","score","setScore","totalScore","setTotalScore","timeLeft","setTimeLeft","gameStarted","setGameStarted","revealedLetters","setRevealedLetters","inputRef","timer","setTimeout","clearTimeout","revealNextLetter","current","focus","length","prevInput","newInput","slice","padEnd","prevRevealed","endRound","startGame","newRound","randomPair","Math","floor","random","target","clue","repeat","handleInputChange","e","input","value","toUpperCase","split","filter","char","join","result","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","onChange","disabled","style","fontFamily","onClick","toString","padStart","_c","$RefreshReg$"],"sources":["C:/Users/richa/Documents/reactapp/word-guessing-game/src/WordGuessingGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { wordClueDict } from './wordClueDictionary';\r\n\r\nconst WordGuessingGame = () => {\r\n  const [targetWord, setTargetWord] = useState('');\r\n  const [clueWord, setClueWord] = useState('');\r\n  const [userInput, setUserInput] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(15);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [revealedLetters, setRevealedLetters] = useState(0);\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (gameStarted && timeLeft > 0) {\r\n      const timer = setTimeout(() => {\r\n        setTimeLeft(timeLeft - 1);\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    } else if (timeLeft === 0) {\r\n      revealNextLetter();\r\n    }\r\n  }, [timeLeft, gameStarted]);\r\n\r\n  useEffect(() => {\r\n    if (gameStarted && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [gameStarted]);\r\n\r\n  const revealNextLetter = () => {\r\n    if (revealedLetters < targetWord.length) {\r\n      setUserInput(prevInput => {\r\n        const newInput = targetWord.slice(0, revealedLetters + 1).padEnd(targetWord.length, '_');\r\n        return newInput;\r\n      });\r\n      setRevealedLetters(prevRevealed => prevRevealed + 1);\r\n      setTimeLeft(15);\r\n    } else {\r\n      endRound();\r\n    }\r\n  };\r\n\r\n  const startGame = () => {\r\n    setGameStarted(true);\r\n    newRound();\r\n  };\r\n\r\n  const newRound = () => {\r\n    const randomPair = wordClueDict[Math.floor(Math.random() * wordClueDict.length)];\r\n    setTargetWord(randomPair.target);\r\n    setClueWord(randomPair.clue);\r\n    setUserInput('_'.repeat(randomPair.target.length));\r\n    setRevealedLetters(0);\r\n    setTimeLeft(15);\r\n  };\r\n\r\n  const endRound = () => {\r\n    setGameStarted(false);\r\n    setTotalScore(totalScore + score);\r\n    setScore(0);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const input = e.target.value.toUpperCase();\r\n    const newInput = input.split('').filter(char => char !== '_').join('');\r\n    \r\n    if (newInput === targetWord) {\r\n      setScore(score + timeLeft);\r\n      newRound();\r\n    } else if (newInput.length === targetWord.length) {\r\n      // Wrong guess: reset to revealed letters only\r\n      setUserInput(prevInput => {\r\n        return targetWord.slice(0, revealedLetters).padEnd(targetWord.length, '_');\r\n      });\r\n    } else {\r\n      // Partial input: allow typing\r\n      setUserInput(prevInput => {\r\n        let result = newInput.padEnd(targetWord.length, '_');\r\n        // Preserve revealed letters\r\n        for (let i = 0; i < revealedLetters; i++) {\r\n          result = result.slice(0, i) + targetWord[i] + result.slice(i + 1);\r\n        }\r\n        return result;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-black text-white p-4\">\r\n      <h1 className=\"text-4xl font-bold mb-8 text-lime-400\">What's The Word</h1>\r\n      <p className=\"mb-4 text-cyan-300 text-2xl\">Clue: {clueWord}</p>\r\n      <input\r\n        ref={inputRef}\r\n        type=\"text\"\r\n        value={userInput}\r\n        onChange={handleInputChange}\r\n        disabled={!gameStarted}\r\n        className=\"mb-4 p-2 text-black w-64 text-center text-2xl tracking-widest\"\r\n        style={{fontFamily: 'monospace'}}\r\n      />\r\n      <button\r\n        onClick={gameStarted ? endRound : startGame}\r\n        className=\"mb-4 px-4 py-2 bg-white text-black\"\r\n      >\r\n        {gameStarted ? 'End' : 'Start'}\r\n      </button>\r\n      <p className=\"mb-2\">Time: {timeLeft}</p>\r\n      <p className=\"mb-2 text-lime-400\">Score: {score.toString().padStart(2, '0')}</p>\r\n      <p className=\"text-blue-400\">Total: {totalScore.toString().padStart(2, '0')}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordGuessingGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}